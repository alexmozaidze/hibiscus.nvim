#!/usr/bin/env bash

set -eou pipefail

SOURCE="${1?required arg SOURCE}"
TARGET="${2?required arg TARGET}"

# ---------------------- #
#         UTILS          #
# ---------------------- #
:: () {
	echo ":: $@"
}

log () {
	local COLOR="${1}"
	local CONTENT="$(echo $@ | cut -d' ' -f2-)"

	local BOLD=0
	local HEADER="==>"
	if [ "${COLOR}" = "1" ]; then
		BOLD=1
		HEADER="xxx"
		echo "  ${HEADER} ${CONTENT}" > /tmp/tangerine-err
	fi

	echo -e "   \e[1;3${COLOR}m${HEADER}\e[0m \e[${BOLD}m${CONTENT}\e[0m"
}

logcat () {
	cat "${1}" | sed "s/^/       /" >&2
}


# --------------------- #
#       PANVIMDOC       #
# --------------------- #
WRITER="./panvimdoc.lua"
REMOTE="https://github.com/kdheepak/panvimdoc/raw/main/scripts/panvimdoc.lua"

if [ ! -f "${WRITER}" ]; then
	:: DOWNLOADING PANVIMDOC
	if curl -sLJ "${REMOTE}" -o "${WRITER}"; then
		log 2 "${WRITER}"
	else
		log 1 "${WRITER}"
		exit 1
	fi
	:: DONE
fi


# --------------------- #
#         MAIN          #
# --------------------- #
LOGFILE="$(mktemp)"

panvimdoc () {
	< "${SOURCE}" \
	gawk '{
		# parse ignore
		if ($0 ~ "ignore-line") {
			getline
			getline
		}
		if ($0 ~ "ignore-start") {
			ignore="Yes"
		}
		if (ignore && $0 ~ "ignore-end") {
			ignore=Null; getline
		}

		# parse doc-tags
		if ($2 ~ "doc=.+") {
			doc=$2
			getline
			$(NF + 1)="{"doc"}"
		}

		# parse optional args
		if ($0 ~ "{.+?}") {
			gsub("?}", "*}", $0)
		}

		# parse header blocks
		if ($1 == "#####" && $(NF) ~ ":$" ) {
			$(NF + 1)="~"
		}

		# strip quotes
		gsub("^> ", "", $0)

		# strip emoji
		gsub(":[a-z_]+:", "", $0)

		# strip html blocks
		if (! code && $1 ~ "^```") {
			code="Yes"
		}
		else if (code && $1 ~ "^```") {
			code=Null
		}

		if (! code) gsub("<[^>]+>", "", $0)

		if (! ignore) print $0
	}' |
	pandoc \
		-M 'project:hibiscus' \
		-M 'description:Opinionated fennel macros for neovim' \
		-M "toc:true" \
		-M "treesitter:true" \
		-M "docmapping:true" \
		-M "incrementheadinglevelby:0" \
		-t "${WRITER}" \
		-o "${TARGET}" 2> "${LOGFILE}"
}

:: RUNNING PANVIMDOC
if panvimdoc; then
	log 2 "${TARGET#./}"
else
	log 1 ERROR >&2
	logcat "${LOGFILE}"
	exit 1
fi
